var searchIndex = {};
searchIndex["cargo"] = {"doc":"","items":[[5,"execute_main","cargo","",null,null],[5,"call_main","","",null,null],[5,"execute_main_without_stdin","","",null,null],[5,"call_main_without_stdin","","",null,null],[5,"process_executed","","",null,{"inputs":[{"name":"cliresult"},{"name":"multishell"}],"output":null}],[5,"shell","","",null,{"inputs":[{"name":"verbosity"},{"name":"colorconfig"}],"output":{"name":"multishell"}}],[5,"handle_error","","",null,{"inputs":[{"name":"clierror"},{"name":"multishell"}],"output":null}],[5,"version","","",null,{"inputs":[],"output":{"name":"string"}}],[0,"core","","",null,null],[3,"PackageIdSpec","cargo::core","",null,null],[0,"source","","",null,null],[3,"SourceId","cargo::core::source","Unique identifier for a source of packages.",null,null],[3,"SourceMap","","",null,null],[3,"SourcesMut","","",null,null],[4,"GitReference","","",null,null],[13,"Tag","","",0,null],[13,"Branch","","",0,null],[13,"Rev","","",0,null],[6,"Sources","","",null,null],[8,"Source","","A Source finds and downloads remote packages based on names and\nversions.",null,null],[10,"update","","The update method performs any network operations required to\nget the entire list of all names, versions and dependencies of\npackages managed by the Source.",1,null],[10,"download","","The download method fetches the full package for each name and\nversion specified.",1,null],[10,"fingerprint","","Generates a unique string which represents the fingerprint of the\ncurrent state of the source.",1,null],[11,"hash","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"from_url","","Parses a source URL and returns the corresponding ID.",2,{"inputs":[{"name":"str"}],"output":{"name":"sourceid"}}],[11,"to_url","","",2,null],[11,"for_path","","",2,{"inputs":[{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"for_git","","",2,{"inputs":[{"name":"url"},{"name":"gitreference"}],"output":{"name":"sourceid"}}],[11,"for_registry","","",2,{"inputs":[{"name":"url"}],"output":{"name":"sourceid"}}],[11,"for_central","","Returns the `SourceId` corresponding to the main repository.",2,{"inputs":[{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"url","","",2,null],[11,"is_path","","",2,null],[11,"is_registry","","",2,null],[11,"is_git","","",2,null],[11,"load","","Creates an implementation of `Source` corresponding to this ID.",2,null],[11,"precise","","",2,null],[11,"git_reference","","",2,null],[11,"with_precise","","",2,null],[11,"is_default_registry","","",2,null],[11,"eq","","",2,null],[11,"partial_cmp","","",2,null],[11,"cmp","","",2,null],[11,"encode","","",2,null],[11,"decode","","",2,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",2,null],[11,"hash","","",2,null],[11,"to_ref_string","","",0,null],[11,"new","","",3,{"inputs":[],"output":{"name":"sourcemap"}}],[11,"contains","","",3,null],[11,"get","","",3,null],[11,"get_mut","","",3,null],[11,"get_by_package_id","","",3,null],[11,"insert","","",3,null],[11,"is_empty","","",3,null],[11,"len","","",3,null],[11,"sources","","",3,null],[11,"sources_mut","","",3,null],[11,"next","","",4,null],[0,"package","cargo::core","",null,null],[3,"Package","cargo::core::package","Information about a package that is available somewhere in the file system.",null,null],[3,"PackageSet","","",null,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"encode","","",5,null],[11,"new","","",5,{"inputs":[{"name":"manifest"},{"name":"path"}],"output":{"name":"package"}}],[11,"for_path","","",5,{"inputs":[{"name":"path"},{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"dependencies","","",5,null],[11,"manifest","","",5,null],[11,"manifest_path","","",5,null],[11,"name","","",5,null],[11,"package_id","","",5,null],[11,"root","","",5,null],[11,"summary","","",5,null],[11,"targets","","",5,null],[11,"version","","",5,null],[11,"authors","","",5,null],[11,"publish","","",5,null],[11,"has_custom_build","","",5,null],[11,"generate_metadata","","",5,null],[11,"find_closest_target","","",5,null],[11,"fmt","","",5,null],[11,"eq","","",5,null],[11,"hash","","",5,null],[11,"new","","",6,null],[11,"package_ids","","",6,null],[11,"get","","",6,null],[11,"sources","","",6,null],[0,"package_id","cargo::core","",null,null],[3,"PackageId","cargo::core::package_id","Identifier for a specific version of a package in a specific source.",null,null],[3,"Metadata","","",null,null],[12,"metadata","","",7,null],[12,"extra_filename","","",7,null],[4,"PackageIdError","","",null,null],[13,"InvalidVersion","","",8,null],[13,"InvalidNamespace","","",8,null],[11,"fmt","","",9,null],[11,"clone","","",9,null],[11,"encode","","",9,null],[11,"decode","","",9,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"hash","","",9,null],[11,"eq","","",9,null],[11,"partial_cmp","","",9,null],[11,"cmp","","",9,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"fmt","","",8,null],[11,"clone","","",8,null],[11,"description","","",8,null],[11,"fmt","","",8,null],[11,"is_human","","",8,null],[11,"from","alloc::boxed","",10,{"inputs":[{"name":"packageiderror"}],"output":{"name":"box"}}],[11,"fmt","cargo::core::package_id","",7,null],[11,"encode","","",7,null],[11,"clone","","",7,null],[11,"hash","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"new","","",9,{"inputs":[{"name":"str"},{"name":"t"},{"name":"sourceid"}],"output":{"name":"cargoresult"}}],[11,"name","","",9,null],[11,"version","","",9,null],[11,"source_id","","",9,null],[11,"generate_metadata","","",9,null],[11,"with_precise","","",9,null],[11,"mix","","",7,null],[11,"fmt","","",9,null],[0,"dependency","cargo::core","",null,null],[3,"Dependency","cargo::core::dependency","Information about a dependency requested by a Cargo manifest.\nCheap to copy.",null,null],[3,"DependencyInner","","The data underlying a Dependency.",null,null],[4,"Platform","","",null,null],[13,"Name","","",11,null],[13,"Cfg","","",11,null],[4,"Kind","","",null,null],[13,"Normal","","",12,null],[13,"Development","","",12,null],[13,"Build","","",12,null],[11,"fmt","","",13,null],[11,"clone","","",13,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"fmt","","",14,null],[11,"clone","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"fmt","","",11,null],[11,"clone","","",11,null],[11,"encode","","",13,null],[11,"fmt","","",12,null],[11,"clone","","",12,null],[11,"eq","","",12,null],[11,"encode","","",12,null],[11,"parse","","Attempt to create a `Dependency` from an entry in the manifest.",14,{"inputs":[{"name":"str"},{"name":"option"},{"name":"sourceid"}],"output":{"name":"cargoresult"}}],[11,"new_override","","",14,{"inputs":[{"name":"str"},{"name":"sourceid"}],"output":{"name":"dependencyinner"}}],[11,"version_req","","",14,null],[11,"name","","",14,null],[11,"source_id","","",14,null],[11,"kind","","",14,null],[11,"specified_req","","",14,null],[11,"platform","","If none, this dependency must be built for all platforms.\nIf some, it must only be built for matching platforms.",14,null],[11,"set_kind","","",14,null],[11,"set_features","","Sets the list of features requested for the package.",14,null],[11,"set_default_features","","Sets whether the dependency requests default features of the package.",14,null],[11,"set_optional","","Sets whether the dependency is optional.",14,null],[11,"set_source_id","","Set the source id for this dependency",14,null],[11,"set_version_req","","Set the version requirement for this dependency",14,null],[11,"set_platform","","",14,null],[11,"lock_to","","Lock this dependency to depending on the specified package id",14,null],[11,"is_transitive","","Returns false if the dependency is only used to build the local package.",14,null],[11,"is_build","","",14,null],[11,"is_optional","","",14,null],[11,"uses_default_features","","Returns true if the default features of the dependency are requested.",14,null],[11,"features","","Returns the list of features that are requested by the dependency.",14,null],[11,"matches","","Returns true if the package (`sum`) can fulfill this dependency request.",14,null],[11,"matches_id","","Returns true if the package (`id`) can fulfill this dependency request.",14,null],[11,"into_dependency","","",14,null],[11,"parse","","Attempt to create a `Dependency` from an entry in the manifest.",13,{"inputs":[{"name":"str"},{"name":"option"},{"name":"sourceid"}],"output":{"name":"cargoresult"}}],[11,"new_override","","",13,{"inputs":[{"name":"str"},{"name":"sourceid"}],"output":{"name":"dependency"}}],[11,"clone_inner","","",13,null],[11,"version_req","","",13,null],[11,"name","","",13,null],[11,"source_id","","",13,null],[11,"kind","","",13,null],[11,"specified_req","","",13,null],[11,"platform","","If none, this dependencies must be built for all platforms.\nIf some, it must only be built for the specified platform.",13,null],[11,"lock_to","","Lock this dependency to depending on the specified package id",13,null],[11,"is_transitive","","Returns false if the dependency is only used to build the local package.",13,null],[11,"is_build","","",13,null],[11,"is_optional","","",13,null],[11,"uses_default_features","","Returns true if the default features of the dependency are requested.",13,null],[11,"features","","Returns the list of features that are requested by the dependency.",13,null],[11,"matches","","Returns true if the package (`sum`) can fulfill this dependency request.",13,null],[11,"matches_id","","Returns true if the package (`id`) can fulfill this dependency request.",13,null],[11,"matches","","",11,null],[11,"encode","","",11,null],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",11,null],[0,"manifest","cargo::core","",null,null],[3,"Manifest","cargo::core::manifest","Contains all the information about a package, as loaded from a Cargo.toml.",null,null],[3,"ManifestMetadata","","General metadata about a package which is just blindly uploaded to the\nregistry.",null,null],[12,"authors","","",15,null],[12,"keywords","","",15,null],[12,"license","","",15,null],[12,"license_file","","",15,null],[12,"description","","",15,null],[12,"readme","","",15,null],[12,"homepage","","",15,null],[12,"repository","","",15,null],[12,"documentation","","",15,null],[3,"Profile","","",null,null],[12,"opt_level","","",16,null],[12,"lto","","",16,null],[12,"codegen_units","","",16,null],[12,"rustc_args","","",16,null],[12,"rustdoc_args","","",16,null],[12,"debuginfo","","",16,null],[12,"debug_assertions","","",16,null],[12,"rpath","","",16,null],[12,"test","","",16,null],[12,"doc","","",16,null],[12,"run_custom_build","","",16,null],[12,"panic","","",16,null],[3,"Profiles","","",null,null],[12,"release","","",17,null],[12,"dev","","",17,null],[12,"test","","",17,null],[12,"test_deps","","",17,null],[12,"bench","","",17,null],[12,"bench_deps","","",17,null],[12,"doc","","",17,null],[12,"custom_build","","",17,null],[3,"Target","","Information about a binary, a library, an example, etc. that is part of the\npackage.",null,null],[4,"LibKind","","",null,null],[13,"Lib","","",18,null],[13,"Rlib","","",18,null],[13,"Dylib","","",18,null],[13,"Other","","",18,null],[4,"TargetKind","","",null,null],[13,"Lib","","",19,null],[13,"Bin","","",19,null],[13,"Test","","",19,null],[13,"Bench","","",19,null],[13,"Example","","",19,null],[13,"CustomBuild","","",19,null],[11,"fmt","","",20,null],[11,"clone","","",20,null],[11,"fmt","","",15,null],[11,"clone","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"hash","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"from_str","","",18,{"inputs":[{"name":"str"}],"output":{"name":"libkind"}}],[11,"crate_type","","Returns the argument suitable for `--crate-type` to pass to rustc.",18,null],[11,"linkable","","",18,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"hash","","",19,null],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"encode","","",19,null],[11,"hash","","",16,null],[11,"fmt","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"clone","","",16,null],[11,"decode","","",16,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",16,null],[11,"fmt","","",17,null],[11,"clone","","",17,null],[11,"default","","",17,{"inputs":[],"output":{"name":"profiles"}}],[11,"fmt","","",21,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"hash","","",21,null],[11,"clone","","",21,null],[11,"encode","","",21,null],[11,"new","","",20,{"inputs":[{"name":"summary"},{"name":"vec"},{"name":"vec"},{"name":"vec"},{"name":"option"},{"name":"manifestmetadata"},{"name":"profiles"},{"name":"bool"},{"name":"vec"}],"output":{"name":"manifest"}}],[11,"dependencies","","",20,null],[11,"exclude","","",20,null],[11,"include","","",20,null],[11,"metadata","","",20,null],[11,"name","","",20,null],[11,"package_id","","",20,null],[11,"summary","","",20,null],[11,"targets","","",20,null],[11,"version","","",20,null],[11,"warnings","","",20,null],[11,"profiles","","",20,null],[11,"publish","","",20,null],[11,"replace","","",20,null],[11,"links","","",20,null],[11,"add_warning","","",20,null],[11,"set_summary","","",20,null],[11,"lib_target","","",21,{"inputs":[{"name":"str"},{"name":"vec"},{"name":"path"},{"name":"metadata"}],"output":{"name":"target"}}],[11,"bin_target","","",21,{"inputs":[{"name":"str"},{"name":"path"},{"name":"option"}],"output":{"name":"target"}}],[11,"custom_build_target","","Builds a `Target` corresponding to the `build = &quot;build.rs&quot;` entry.",21,{"inputs":[{"name":"str"},{"name":"path"},{"name":"option"}],"output":{"name":"target"}}],[11,"example_target","","",21,{"inputs":[{"name":"str"},{"name":"path"}],"output":{"name":"target"}}],[11,"test_target","","",21,{"inputs":[{"name":"str"},{"name":"path"},{"name":"metadata"}],"output":{"name":"target"}}],[11,"bench_target","","",21,{"inputs":[{"name":"str"},{"name":"path"},{"name":"metadata"}],"output":{"name":"target"}}],[11,"name","","",21,null],[11,"crate_name","","",21,null],[11,"src_path","","",21,null],[11,"metadata","","",21,null],[11,"kind","","",21,null],[11,"tested","","",21,null],[11,"harness","","",21,null],[11,"documented","","",21,null],[11,"for_host","","",21,null],[11,"benched","","",21,null],[11,"doctested","","",21,null],[11,"allows_underscores","","",21,null],[11,"is_lib","","",21,null],[11,"linkable","","",21,null],[11,"is_bin","","",21,null],[11,"is_example","","",21,null],[11,"is_test","","",21,null],[11,"is_bench","","",21,null],[11,"is_custom_build","","",21,null],[11,"rustc_crate_types","","Returns the arguments suitable for `--crate-type` to pass to rustc.",21,null],[11,"can_lto","","",21,null],[11,"set_tested","","",21,null],[11,"set_benched","","",21,null],[11,"set_doctest","","",21,null],[11,"set_for_host","","",21,null],[11,"set_harness","","",21,null],[11,"set_doc","","",21,null],[11,"fmt","","",21,null],[11,"default_dev","","",16,{"inputs":[],"output":{"name":"profile"}}],[11,"default_release","","",16,{"inputs":[],"output":{"name":"profile"}}],[11,"default_test","","",16,{"inputs":[],"output":{"name":"profile"}}],[11,"default_bench","","",16,{"inputs":[],"output":{"name":"profile"}}],[11,"default_doc","","",16,{"inputs":[],"output":{"name":"profile"}}],[11,"default_custom_build","","",16,{"inputs":[],"output":{"name":"profile"}}],[11,"default","","",16,{"inputs":[],"output":{"name":"profile"}}],[11,"fmt","","",16,null],[0,"resolver","cargo::core","Resolution of the entire dependency graph for a crate",null,null],[3,"EncodableResolve","cargo::core::resolver","",null,null],[3,"EncodableDependency","","",null,null],[3,"EncodablePackageId","","",null,null],[3,"Resolve","","Represents a fully resolved package dependency graph. Each node in the graph\nis a package and edges represent dependencies between packages.",null,null],[3,"Deps","","",null,null],[3,"DepsNotReplaced","","",null,null],[4,"Method","","",null,null],[13,"Everything","","",22,null],[13,"Required","","",22,null],[12,"dev_deps","cargo::core::resolver::Method","",22,null],[12,"features","","",22,null],[12,"uses_default_features","","",22,null],[5,"resolve","cargo::core::resolver","Builds the list of all packages required to build the first argument.",null,null],[11,"fmt","","",23,null],[11,"decode","","",23,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",23,null],[11,"to_resolve","","",23,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"cmp","","",24,null],[11,"partial_cmp","","",24,null],[11,"lt","","",24,null],[11,"le","","",24,null],[11,"gt","","",24,null],[11,"ge","","",24,null],[11,"fmt","","",24,null],[11,"decode","","",24,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",24,null],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"cmp","","",25,null],[11,"partial_cmp","","",25,null],[11,"lt","","",25,null],[11,"le","","",25,null],[11,"gt","","",25,null],[11,"ge","","",25,null],[11,"fmt","","",25,null],[11,"encode","","",25,null],[11,"decode","","",25,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",26,null],[6,"Metadata","","",null,null],[11,"clone","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"clone","","",22,null],[11,"copy_metadata","","",26,null],[11,"iter","","",26,null],[11,"root","","",26,null],[11,"deps","","",26,null],[11,"deps_not_replaced","","",26,null],[11,"replacement","","",26,null],[11,"replacements","","",26,null],[11,"features","","",26,null],[11,"query","","",26,null],[11,"fmt","","",26,null],[11,"next","","",27,null],[11,"next","","",28,null],[0,"summary","cargo::core","",null,null],[3,"Summary","cargo::core::summary","Subset of a `Manifest`. Contains only the most important informations about\na package.",null,null],[8,"SummaryVec","","",null,null],[10,"names","","",29,null],[11,"clone","","",30,null],[11,"fmt","","",30,null],[11,"new","","",30,{"inputs":[{"name":"packageid"},{"name":"vec"},{"name":"hashmap"}],"output":{"name":"cargoresult"}}],[11,"package_id","","",30,null],[11,"name","","",30,null],[11,"version","","",30,null],[11,"source_id","","",30,null],[11,"dependencies","","",30,null],[11,"features","","",30,null],[11,"override_id","","",30,null],[11,"map_dependencies","","",30,null],[11,"eq","","",30,null],[11,"names","collections::vec","",31,null],[0,"shell","cargo::core","",null,null],[3,"ShellConfig","cargo::core::shell","",null,null],[12,"color_config","","",32,null],[12,"tty","","",32,null],[3,"Shell","","",null,null],[3,"MultiShell","","",null,null],[4,"Verbosity","","",null,null],[13,"Verbose","","",33,null],[13,"Normal","","",33,null],[13,"Quiet","","",33,null],[4,"ColorConfig","","",null,null],[13,"Auto","","",34,null],[13,"Always","","",34,null],[13,"Never","","",34,null],[11,"eq","","",33,null],[11,"clone","","",33,null],[11,"eq","","",34,null],[11,"clone","","",34,null],[11,"fmt","","",34,null],[11,"clone","","",32,null],[11,"new","","",35,{"inputs":[{"name":"shell"},{"name":"shell"},{"name":"verbosity"}],"output":{"name":"multishell"}}],[11,"out","","",35,null],[11,"err","","",35,null],[11,"say","","",35,null],[11,"status","","",35,null],[11,"verbose","","",35,null],[11,"concise","","",35,null],[11,"error","","",35,null],[11,"warn","","",35,null],[11,"set_verbosity","","",35,null],[11,"set_color_config","","",35,null],[11,"get_verbose","","",35,null],[11,"color_config","","",35,null],[11,"create","","",36,{"inputs":[{"name":"t"},{"name":"shellconfig"}],"output":{"name":"shell"}}],[11,"set_color_config","","",36,null],[11,"say","","",36,null],[11,"say_status","","",36,null],[11,"write","","",36,null],[11,"flush","","",36,null],[0,"registry","cargo::core","",null,null],[3,"PackageRegistry","cargo::core::registry","This structure represents a registry of known packages. It internally\ncontains a number of `Box&lt;Source&gt;` instances which are used to load a\n`Package` from.",null,null],[8,"Registry","","Source of information about a group of packages.",null,null],[10,"query","","Attempt to find the packages that match a dependency request.",37,null],[11,"query","collections::vec","",31,null],[11,"query","","",31,null],[11,"new","cargo::core::registry","",38,{"inputs":[{"name":"config"}],"output":{"name":"packageregistry"}}],[11,"get","","",38,null],[11,"add_sources","","",38,null],[11,"add_preloaded","","",38,null],[11,"add_override","","",38,null],[11,"register_lock","","",38,null],[11,"query","","",38,null],[11,"fmt","cargo::core","",39,null],[11,"eq","","",39,null],[11,"ne","","",39,null],[11,"clone","","",39,null],[11,"parse","","",39,{"inputs":[{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"query_str","","",39,{"inputs":[{"name":"str"},{"name":"i"}],"output":{"name":"cargoresult"}}],[11,"from_package_id","","",39,{"inputs":[{"name":"packageid"}],"output":{"name":"packageidspec"}}],[11,"name","","",39,null],[11,"version","","",39,null],[11,"url","","",39,null],[11,"matches","","",39,null],[11,"query","","",39,null],[11,"fmt","","",39,null],[0,"ops","cargo","",null,null],[3,"CleanOptions","cargo::ops","",null,null],[12,"spec","","",40,null],[12,"target","","",40,null],[12,"config","","",40,null],[12,"release","","",40,null],[3,"CompileOptions","","Contains information about how a package should be compiled.",null,null],[12,"config","","",41,null],[12,"jobs","","Number of concurrent jobs to use.",41,null],[12,"target","","The target platform to compile for (example: `i686-unknown-linux-gnu`).",41,null],[12,"features","","Extra features to build for the root package",41,null],[12,"no_default_features","","Flag if the default feature should be built for the root package",41,null],[12,"spec","","Root package to build (if None it&#39;s the current one)",41,null],[12,"filter","","Filter to apply to the root package to select which targets will be\nbuilt.",41,null],[12,"exec_engine","","Engine which drives compilation",41,null],[12,"release","","Whether this is a release build or not",41,null],[12,"mode","","Mode for this compile.",41,null],[12,"target_rustdoc_args","","Extra arguments to be passed to rustdoc (for main crate and dependencies)",41,null],[12,"target_rustc_args","","The specified target will be compiled with all the available arguments,\nnote that this only accounts for the *final* invocation of rustc",41,null],[3,"Compilation","","A structure returning the result of a compilation.",null,null],[12,"libraries","","All libraries which were built for a package.",42,null],[12,"tests","","An array of all tests created during this compilation.",42,null],[12,"binaries","","An array of all binaries created.",42,null],[12,"native_dirs","","All directires for the output of native build commands.",42,null],[12,"root_output","","Root output directory (for the local package&#39;s artifacts)",42,null],[12,"deps_output","","Output directory for rust dependencies",42,null],[12,"extra_env","","Extra environment variables that were passed to compilations and should\nbe passed to future invocations of programs.",42,null],[12,"to_doc_test","","",42,null],[12,"cfgs","","Features enabled during this compilation.",42,null],[3,"Layout","","",null,null],[3,"Unit","","",null,null],[12,"pkg","","",43,null],[12,"target","","",43,null],[12,"profile","","",43,null],[12,"kind","","",43,null],[3,"Context","","",null,null],[12,"config","","",44,null],[12,"resolve","","",44,null],[12,"compilation","","",44,null],[12,"packages","","",44,null],[12,"build_state","","",44,null],[12,"build_explicit_deps","","",44,null],[12,"exec_engine","","",44,null],[12,"fingerprints","","",44,null],[12,"compiled","","",44,null],[12,"build_config","","",44,null],[12,"build_scripts","","",44,null],[12,"links","","",44,null],[3,"LayoutProxy","","",null,null],[3,"BuildOutput","","Contains the parsed output of a custom build script.",null,null],[12,"library_paths","","Paths to pass to rustc with the `-L` flag",45,null],[12,"library_links","","Names and link kinds of libraries, suitable for the `-l` flag",45,null],[12,"cfgs","","Various `--cfg` flags to pass to the compiler",45,null],[12,"metadata","","Metadata to pass to the immediate dependencies",45,null],[12,"rerun_if_changed","","Glob paths to trigger a rerun of this build script.",45,null],[12,"warnings","","Warnings generated by this build,",45,null],[3,"BuildConfig","","",null,null],[12,"host","","",46,null],[12,"target","","",46,null],[12,"jobs","","",46,null],[12,"requested_target","","",46,null],[12,"exec_engine","","",46,null],[12,"release","","",46,null],[12,"test","","",46,null],[12,"doc_all","","",46,null],[3,"TargetConfig","","",null,null],[12,"ar","","",47,null],[12,"linker","","",47,null],[12,"overrides","","",47,null],[3,"CommandPrototype","","Prototype for a command that must be executed.",null,null],[3,"ProcessEngine","","Default implementation of `ExecEngine`.",null,null],[3,"NewOptions","","",null,null],[12,"version_control","","",48,null],[12,"bin","","",48,null],[12,"path","","",48,null],[12,"name","","",48,null],[3,"DocOptions","","",null,null],[12,"open_result","","",49,null],[12,"compile_opts","","",49,null],[3,"UpdateOptions","","",null,null],[12,"config","","",50,null],[12,"to_update","","",50,null],[12,"precise","","",50,null],[12,"aggressive","","",50,null],[3,"TestOptions","","",null,null],[12,"compile_opts","","",51,null],[12,"no_run","","",51,null],[12,"no_fail_fast","","",51,null],[12,"only_doc","","",51,null],[3,"PackageOpts","","",null,null],[12,"config","","",52,null],[12,"list","","",52,null],[12,"check_metadata","","",52,null],[12,"allow_dirty","","",52,null],[12,"verify","","",52,null],[3,"RegistryConfig","","",null,null],[12,"index","","",53,null],[12,"token","","",53,null],[3,"OwnersOptions","","",null,null],[12,"krate","","",54,null],[12,"token","","",54,null],[12,"index","","",54,null],[12,"to_add","","",54,null],[12,"to_remove","","",54,null],[12,"list","","",54,null],[3,"PublishOpts","","",null,null],[12,"config","","",55,null],[12,"token","","",55,null],[12,"index","","",55,null],[12,"verify","","",55,null],[12,"allow_dirty","","",55,null],[3,"OutputMetadataOptions","","",null,null],[12,"features","","",56,null],[12,"manifest_path","","",56,null],[12,"no_default_features","","",56,null],[12,"no_deps","","",56,null],[12,"version","","",56,null],[3,"ExportInfo","","",null,null],[4,"CompileFilter","","",null,null],[13,"Everything","","",57,null],[13,"Only","","",57,null],[12,"lib","cargo::ops::CompileFilter","",57,null],[12,"bins","","",57,null],[12,"examples","","",57,null],[12,"tests","","",57,null],[12,"benches","","",57,null],[4,"CompileMode","cargo::ops","",null,null],[13,"Test","","",58,null],[13,"Build","","",58,null],[13,"Bench","","",58,null],[13,"Doc","","",58,null],[12,"deps","cargo::ops::CompileMode","",58,null],[4,"Kind","cargo::ops","",null,null],[13,"Host","","",59,null],[13,"Target","","",59,null],[4,"CommandType","","",null,null],[13,"Rustc","","",60,null],[13,"Rustdoc","","",60,null],[13,"Target","","The command is to be executed for the target architecture.",60,null],[13,"Host","","The command is to be executed for the host architecture.",60,null],[4,"VersionControl","","",null,null],[13,"Git","","",61,null],[13,"Hg","","",61,null],[13,"NoVcs","","",61,null],[5,"clean","","Cleans the project from build artifacts.",null,{"inputs":[{"name":"path"},{"name":"cleanoptions"}],"output":{"name":"cargoresult"}}],[5,"compile","","",null,{"inputs":[{"name":"path"},{"name":"compileoptions"}],"output":{"name":"cargoresult"}}],[5,"compile_pkg","","",null,{"inputs":[{"name":"package"},{"name":"option"},{"name":"compileoptions"}],"output":{"name":"cargoresult"}}],[5,"resolve_dependencies","","",null,{"inputs":[{"name":"package"},{"name":"config"},{"name":"option"},{"name":"vec"},{"name":"bool"}],"output":{"name":"cargoresult"}}],[5,"read_manifest","","",null,null],[5,"read_package","","",null,{"inputs":[{"name":"path"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"read_packages","","",null,{"inputs":[{"name":"path"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"compile_targets","","",null,{"inputs":[{"name":"packagestobuild"},{"name":"packageset"},{"name":"resolve"},{"name":"config"},{"name":"buildconfig"},{"name":"profiles"}],"output":{"name":"cargoresult"}}],[5,"run","","",null,null],[5,"install","","",null,{"inputs":[{"name":"option"},{"name":"option"},{"name":"sourceid"},{"name":"option"},{"name":"compileoptions"},{"name":"bool"}],"output":{"name":"cargoresult"}}],[5,"install_list","","",null,{"inputs":[{"name":"option"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"uninstall","","",null,null],[5,"new","","",null,{"inputs":[{"name":"newoptions"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"init","","",null,{"inputs":[{"name":"newoptions"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"doc","","",null,{"inputs":[{"name":"path"},{"name":"docoptions"}],"output":{"name":"cargoresult"}}],[5,"generate_lockfile","","",null,{"inputs":[{"name":"path"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"update_lockfile","","",null,{"inputs":[{"name":"path"},{"name":"updateoptions"}],"output":{"name":"cargoresult"}}],[5,"load_pkg_lockfile","","",null,{"inputs":[{"name":"package"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"write_pkg_lockfile","","",null,{"inputs":[{"name":"package"},{"name":"resolve"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"run_tests","","",null,null],[5,"run_benches","","",null,null],[5,"package","","",null,{"inputs":[{"name":"path"},{"name":"packageopts"}],"output":{"name":"cargoresult"}}],[5,"publish","","",null,{"inputs":[{"name":"path"},{"name":"publishopts"}],"output":{"name":"cargoresult"}}],[5,"registry_configuration","","",null,{"inputs":[{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"registry_login","","",null,{"inputs":[{"name":"config"},{"name":"string"}],"output":{"name":"cargoresult"}}],[5,"search","","",null,{"inputs":[{"name":"str"},{"name":"config"},{"name":"option"},{"name":"u8"}],"output":{"name":"cargoresult"}}],[5,"http_proxy_exists","","Determine if an http proxy exists.",null,{"inputs":[{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"http_handle","","Create a new HTTP handle with appropriate global configuration for cargo.",null,{"inputs":[{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"modify_owners","","",null,{"inputs":[{"name":"config"},{"name":"ownersoptions"}],"output":{"name":"cargoresult"}}],[5,"yank","","",null,{"inputs":[{"name":"config"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"bool"}],"output":{"name":"cargoresult"}}],[5,"fetch","","Executes `cargo fetch`.",null,{"inputs":[{"name":"path"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"get_resolved_packages","","",null,{"inputs":[{"name":"resolve"},{"name":"packageregistry"}],"output":{"name":"packageset"}}],[5,"pkgid","","",null,{"inputs":[{"name":"path"},{"name":"option"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"resolve_pkg","","Resolve all dependencies for the specified `package` using the previous\nlockfile as a guide if present.",null,{"inputs":[{"name":"packageregistry"},{"name":"package"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"resolve_with_previous","","Resolve all dependencies for a package using an optional previous instance\nof resolve to guide the resolution process.",null,{"inputs":[{"name":"packageregistry"},{"name":"package"},{"name":"method"},{"name":"option"},{"name":"option"}],"output":{"name":"cargoresult"}}],[5,"output_metadata","","Loads the manifest, resolves the dependencies of the project to the concrete\nused versions - considering overrides - and writes all dependencies in a JSON\nformat to stdout.",null,{"inputs":[{"name":"outputmetadataoptions"},{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"eq","","",58,null],[11,"ne","","",58,null],[11,"clone","","",58,null],[11,"new","","",57,null],[11,"matches","","",57,null],[11,"eq","","",61,null],[11,"fmt","","",61,null],[11,"clone","","",61,null],[11,"decode","","",61,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",62,null],[11,"hash","","",43,null],[11,"eq","","",43,null],[11,"ne","","",43,null],[11,"clone","","",43,null],[11,"new","","",44,{"inputs":[{"name":"resolve"},{"name":"packageset"},{"name":"config"},{"name":"layout"},{"name":"option"},{"name":"buildconfig"},{"name":"profiles"}],"output":{"name":"cargoresult"}}],[11,"prepare","","Prepare this context, ensuring that all filesystem directories are in\nplace.",44,null],[11,"probe_target_info","","Ensure that we&#39;ve collected all target-specific information to compile\nall the units mentioned in `units`.",44,null],[11,"layout","","Returns the appropriate directory layout for either a plugin or not.",44,null],[11,"out_dir","","Returns the appropriate output directory for the specified package and\ntarget.",44,null],[11,"target_triple","","Return the target triple which this context is targeting.",44,null],[11,"target_metadata","","Get the metadata for a target in a specific profile",44,null],[11,"file_stem","","Returns the file stem for a given target/profile combo",44,null],[11,"target_filenames","","Return the filenames that the given target for the given profile will\ngenerate, along with whether you can link against that file (e.g. it&#39;s a\nlibrary).",44,null],[11,"dep_targets","","For a package, return all targets which are registered as dependencies\nfor that package.",44,null],[11,"dep_run_custom_build","","Returns the dependencies needed to run a build script.",44,null],[11,"get_package","","Gets a package for the given package id.",44,null],[11,"linker","","Get the user-specified linker for a particular host or target",44,null],[11,"ar","","Get the user-specified `ar` program for a particular host or target",44,null],[11,"jobs","","Number of jobs specified for this build",44,null],[11,"requested_target","","Requested (not actual) target for the build",44,null],[11,"lib_profile","","",44,null],[11,"build_script_profile","","",44,null],[11,"rustflags_args","","",44,null],[11,"show_warnings","","",44,null],[11,"new","","",42,{"inputs":[{"name":"config"}],"output":{"name":"compilation"}}],[11,"rustc_process","","See `process`.",42,null],[11,"rustdoc_process","","See `process`.",42,null],[11,"target_process","","See `process`.",42,null],[11,"host_process","","See `process`.",42,null],[11,"process","","Prepares a new process with an appropriate environment to run against\nthe artifacts produced by the build process.",42,null],[11,"hash","","",45,null],[11,"fmt","","",45,null],[11,"clone","","",45,null],[11,"parse_file","","",45,{"inputs":[{"name":"path"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"parse","","",45,null],[11,"parse_rustc_flags","","",45,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"clone","","",63,null],[11,"exec","","",63,null],[11,"exec_with_output","","",63,null],[11,"clone","","",64,null],[11,"new","","",64,{"inputs":[{"name":"commandtype"},{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"get_type","","",64,null],[11,"arg","","",64,null],[11,"args","","",64,null],[11,"cwd","","",64,null],[11,"env","","",64,null],[11,"get_args","","",64,null],[11,"get_cwd","","",64,null],[11,"get_env","","",64,null],[11,"get_envs","","",64,null],[11,"into_process_builder","","",64,null],[11,"fmt","","",64,null],[11,"fmt","","",60,null],[11,"clone","","",60,null],[11,"new","","",65,{"inputs":[{"name":"config"},{"name":"package"},{"name":"option"},{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"at","","",65,{"inputs":[{"name":"config"},{"name":"filesystem"}],"output":{"name":"cargoresult"}}],[11,"prepare","","",65,null],[11,"dest","","",65,null],[11,"deps","","",65,null],[11,"examples","","",65,null],[11,"root","","",65,null],[11,"fingerprint","","",65,null],[11,"build","","",65,null],[11,"build_out","","",65,null],[11,"new","","",66,{"inputs":[{"name":"layout"},{"name":"bool"}],"output":{"name":"layoutproxy"}}],[11,"root","","",66,null],[11,"deps","","",66,null],[11,"examples","","",66,null],[11,"build","","",66,null],[11,"build_out","","",66,null],[11,"proxy","","",66,null],[11,"out_dir","","",66,null],[11,"doc_root","","",66,null],[11,"cmp","","",59,null],[11,"partial_cmp","","",59,null],[11,"clone","","",59,null],[11,"fmt","","",59,null],[11,"hash","","",59,null],[11,"eq","","",59,null],[11,"clone","","",46,null],[11,"default","","",46,{"inputs":[],"output":{"name":"buildconfig"}}],[11,"default","","",47,{"inputs":[],"output":{"name":"targetconfig"}}],[11,"clone","","",47,null],[8,"ExecEngine","","Trait for objects that can execute commands.",null,null],[10,"exec","","",67,null],[10,"exec_with_output","","",67,null],[0,"sources","cargo","",null,null],[3,"GitSource","cargo::sources","",null,null],[0,"path","","",null,null],[3,"PathSource","cargo::sources::path","",null,null],[11,"new","","Invoked with an absolute path to a directory that contains a Cargo.toml.",68,{"inputs":[{"name":"path"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"pathsource"}}],[11,"new_recursive","","Creates a new source which is walked recursively to discover packages.",68,{"inputs":[{"name":"path"},{"name":"sourceid"},{"name":"config"}],"output":{"name":"pathsource"}}],[11,"root_package","","",68,null],[11,"read_packages","","",68,null],[11,"list_files","","List all files relevant to building this package inside this source.",68,null],[11,"fmt","","",68,null],[11,"query","","",68,null],[11,"update","","",68,null],[11,"download","","",68,null],[11,"fingerprint","","",68,null],[0,"git","cargo::sources","",null,null],[3,"GitRemote","cargo::sources::git","GitRemote represents a remote repository. It gets cloned into a local\nGitDatabase.",null,null],[3,"GitDatabase","","GitDatabase is a local clone of a remote repository&#39;s database. Multiple\nGitCheckouts can be cloned from this GitDatabase.",null,null],[3,"GitCheckout","","GitCheckout is a local checkout of a particular revision. Calling\n`clone_into` with a reference will resolve the reference into a revision,\nand return a CargoError if no revision for that reference was found.",null,null],[3,"GitRevision","","",null,null],[3,"GitSource","","",null,null],[5,"fetch","","",null,{"inputs":[{"name":"repository"},{"name":"str"},{"name":"str"},{"name":"config"}],"output":{"name":"cargoresult"}}],[5,"canonicalize_url","","",null,{"inputs":[{"name":"url"}],"output":{"name":"url"}}],[11,"fmt","","",69,null],[11,"clone","","",69,null],[11,"eq","","",69,null],[11,"ne","","",69,null],[11,"fmt","","",69,null],[11,"fmt","","",70,null],[11,"clone","","",70,null],[11,"eq","","",70,null],[11,"ne","","",70,null],[11,"encode","","",70,null],[11,"encode","","",71,null],[11,"encode","","",72,null],[11,"new","","",70,{"inputs":[{"name":"url"}],"output":{"name":"gitremote"}}],[11,"url","","",70,null],[11,"rev_for","","",70,null],[11,"checkout","","",70,null],[11,"db_at","","",70,null],[11,"copy_to","","",71,null],[11,"rev_for","","",71,null],[11,"has_ref","","",71,null],[11,"new","cargo::sources","",73,{"inputs":[{"name":"sourceid"},{"name":"config"}],"output":{"name":"gitsource"}}],[11,"url","","",73,null],[11,"read_packages","","",73,null],[11,"fmt","","",73,null],[11,"query","","",73,null],[11,"update","","",73,null],[11,"download","","",73,null],[11,"fingerprint","","",73,null],[0,"registry","","A `Source` for registry-based packages.",null,null],[3,"RegistrySource","cargo::sources::registry","",null,null],[3,"RegistryConfig","","",null,null],[12,"dl","","Download endpoint for all crates. This will be appended with\n`/&lt;crate&gt;/&lt;version&gt;/download` and then will be hit with an HTTP GET\nrequest to download the tarball for a crate.",74,null],[12,"api","","API endpoint for the registry. This is what&#39;s actually hit to perform\noperations like yanks, owner modifications, publish new crates, etc.",74,null],[11,"decode","","",74,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"new","","",75,{"inputs":[{"name":"sourceid"},{"name":"config"}],"output":{"name":"registrysource"}}],[11,"url","","Get the configured default registry URL.",75,{"inputs":[{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"default_url","","Get the default url for the registry",75,{"inputs":[],"output":{"name":"string"}}],[11,"config","","Decode the configuration stored within the registry.",75,null],[11,"summaries","","Parse the on-disk metadata for the package provided",75,null],[11,"query","","",75,null],[11,"update","","",75,null],[11,"download","","",75,null],[11,"fingerprint","","",75,null],[0,"util","cargo","",null,null],[3,"DependencyQueue","cargo::util","",null,null],[3,"FileLock","","",null,null],[3,"Filesystem","","A &quot;filesystem&quot; is intended to be a globally shared, hence locked, resource\nin Cargo.",null,null],[3,"LazyCell","","",null,null],[3,"Rustc","","",null,null],[12,"verbose_version","","",76,null],[12,"host","","",76,null],[12,"cap_lints","","",76,null],[3,"Sha256","","",null,null],[3,"GitRepo","","",null,null],[3,"HgRepo","","",null,null],[4,"Cfg","","",null,null],[13,"Name","","",77,null],[13,"KeyPair","","",77,null],[4,"CfgExpr","","",null,null],[13,"Not","","",78,null],[13,"All","","",78,null],[13,"Any","","",78,null],[13,"Value","","",78,null],[4,"Freshness","","Indication of the freshness of a package.",null,null],[13,"Fresh","","",79,null],[13,"Dirty","","",79,null],[5,"read2","","",null,{"inputs":[{"name":"childstdout"},{"name":"childstderr"},{"name":"fnmut"}],"output":{"name":"result"}}],[0,"config","","",null,null],[3,"Config","cargo::util::config","",null,null],[3,"Value","","",null,null],[12,"val","","",80,null],[12,"definition","","",80,null],[4,"Location","","",null,null],[13,"Project","","",81,null],[13,"Global","","",81,null],[4,"ConfigValue","","",null,null],[13,"Integer","","",82,null],[13,"String","","",82,null],[13,"List","","",82,null],[13,"Table","","",82,null],[13,"Boolean","","",82,null],[4,"Definition","","",null,null],[13,"Path","","",83,null],[13,"Environment","","",83,null],[5,"set_config","","",null,{"inputs":[{"name":"config"},{"name":"location"},{"name":"str"},{"name":"configvalue"}],"output":{"name":"cargoresult"}}],[11,"new","","",84,{"inputs":[{"name":"multishell"},{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"cargoresult"}}],[11,"default","","",84,{"inputs":[],"output":{"name":"cargoresult"}}],[11,"home","","",84,null],[11,"git_db_path","","",84,null],[11,"git_checkout_path","","",84,null],[11,"registry_index_path","","",84,null],[11,"registry_cache_path","","",84,null],[11,"registry_source_path","","",84,null],[11,"shell","","",84,null],[11,"rustc","","",84,null],[11,"rustdoc","","",84,null],[11,"rustc_info","","",84,null],[11,"values","","",84,null],[11,"cwd","","",84,null],[11,"target_dir","","",84,null],[11,"set_target_dir","","",84,null],[11,"get_string","","",84,null],[11,"get_bool","","",84,null],[11,"get_path","","",84,null],[11,"get_list","","",84,null],[11,"get_table","","",84,null],[11,"get_i64","","",84,null],[11,"net_retry","","",84,null],[11,"expected","","",84,null],[11,"configure_shell","","",84,null],[11,"extra_verbose","","",84,null],[11,"decode","","",81,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",81,null],[11,"clone","","",81,null],[11,"eq","","",81,null],[11,"decode","","",82,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",82,null],[11,"eq","","",82,null],[11,"ne","","",82,null],[11,"fmt","","",82,null],[11,"encode","","",82,null],[11,"i64","","",82,null],[11,"string","","",82,null],[11,"table","","",82,null],[11,"list","","",82,null],[11,"boolean","","",82,null],[11,"desc","","",82,null],[11,"definition_path","","",82,null],[11,"root","","",83,null],[11,"fmt","","",83,null],[0,"errors","cargo::util","",null,null],[3,"ProcessError","cargo::util::errors","",null,null],[12,"desc","","",85,null],[12,"exit","","",85,null],[12,"output","","",85,null],[3,"CargoTestError","","Error when testcases fail",null,null],[12,"desc","","",86,null],[12,"exit","","",86,null],[12,"causes","","",86,null],[3,"Human","","",null,null],[12,"0","","",87,null],[3,"CliError","","",null,null],[12,"error","","",88,null],[12,"unknown","","",88,null],[12,"exit_code","","",88,null],[5,"process_error","","",null,{"inputs":[{"name":"str"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"processerror"}}],[5,"internal_error","","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"box"}}],[5,"internal","","",null,{"inputs":[{"name":"s"}],"output":{"name":"box"}}],[5,"human","","",null,{"inputs":[{"name":"s"}],"output":{"name":"box"}}],[5,"caused_human","","",null,{"inputs":[{"name":"s"},{"name":"e"}],"output":{"name":"box"}}],[6,"CargoResult","","",null,null],[6,"CliResult","","",null,null],[8,"CargoError","","",null,null],[11,"is_human","","",89,null],[11,"cargo_cause","","",89,null],[8,"ChainError","","",null,null],[10,"chain_error","","",90,null],[8,"NetworkError","","",null,null],[10,"maybe_spurious","","",91,null],[11,"description","alloc::boxed","",10,null],[11,"cause","","",10,null],[11,"is_human","","",10,null],[11,"cargo_cause","","",10,null],[11,"chain_error","core::result","",92,null],[11,"chain_error","alloc::boxed","",10,null],[11,"chain_error","core::option","",93,null],[11,"description","cargo::util::errors","",85,null],[11,"cause","","",85,null],[11,"fmt","","",85,null],[11,"fmt","","",85,null],[11,"new","","",86,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"fmt","","",86,null],[11,"fmt","","",86,null],[11,"description","","",86,null],[11,"cause","","",86,null],[11,"fmt","","",87,null],[11,"description","","",87,null],[11,"cause","","",87,null],[11,"fmt","","",87,null],[11,"is_human","","",87,null],[11,"cargo_cause","","",87,null],[11,"fmt","","",88,null],[11,"description","","",88,null],[11,"cause","","",88,null],[11,"fmt","","",88,null],[11,"new","","",88,{"inputs":[{"name":"box"},{"name":"i32"}],"output":{"name":"clierror"}}],[11,"code","","",88,{"inputs":[{"name":"i32"}],"output":{"name":"clierror"}}],[11,"from","","",88,{"inputs":[{"name":"box"}],"output":{"name":"clierror"}}],[11,"maybe_spurious","git2::error","",94,null],[11,"maybe_spurious","curl::error","",95,null],[11,"from","alloc::boxed","",10,{"inputs":[{"name":"reqparseerror"}],"output":{"name":"box"}}],[11,"from","","",10,{"inputs":[{"name":"error"}],"output":{"name":"box"}}],[11,"from","","",10,{"inputs":[{"name":"processerror"}],"output":{"name":"box"}}],[11,"from","","",10,{"inputs":[{"name":"error"}],"output":{"name":"box"}}],[11,"from","","",10,{"inputs":[{"name":"decodererror"}],"output":{"name":"box"}}],[11,"from","","",10,{"inputs":[{"name":"encodererror"}],"output":{"name":"box"}}],[11,"from","","",10,{"inputs":[{"name":"error"}],"output":{"name":"box"}}],[11,"from","","",10,{"inputs":[{"name":"clierror"}],"output":{"name":"box"}}],[11,"from","","",10,{"inputs":[{"name":"error"}],"output":{"name":"box"}}],[11,"from","","",10,{"inputs":[{"name":"parseerror"}],"output":{"name":"box"}}],[11,"from","","",10,{"inputs":[{"name":"decodeerror"}],"output":{"name":"box"}}],[11,"from","","",10,{"inputs":[{"name":"nulerror"}],"output":{"name":"box"}}],[11,"from","","",10,{"inputs":[{"name":"error"}],"output":{"name":"box"}}],[11,"from","","",10,{"inputs":[{"name":"parseinterror"}],"output":{"name":"box"}}],[11,"from","","",10,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"box"}}],[11,"from","","",10,{"inputs":[{"name":"parseerror"}],"output":{"name":"box"}}],[11,"from","","",10,{"inputs":[{"name":"human"}],"output":{"name":"box"}}],[0,"graph","cargo::util","",null,null],[3,"Graph","cargo::util::graph","",null,null],[6,"Nodes","","",null,null],[6,"Edges","","",null,null],[11,"new","","",96,{"inputs":[],"output":{"name":"graph"}}],[11,"add","","",96,null],[11,"link","","",96,null],[11,"get_nodes","","",96,null],[11,"edges","","",96,null],[11,"sort","","",96,null],[11,"iter","","",96,null],[11,"fmt","","",96,null],[11,"eq","","",96,null],[11,"clone","","",96,null],[0,"hex","cargo::util","",null,null],[5,"to_hex","cargo::util::hex","",null,{"inputs":[{"name":"u64"}],"output":{"name":"string"}}],[5,"hash_u64","","",null,{"inputs":[{"name":"h"}],"output":{"name":"u64"}}],[5,"short_hash","","",null,{"inputs":[{"name":"h"}],"output":{"name":"string"}}],[0,"important_paths","cargo::util","",null,null],[5,"find_project","cargo::util::important_paths","Iteratively search for `file` in `pwd` and its parents, returning\nthe path of the directory.",null,{"inputs":[{"name":"path"},{"name":"str"}],"output":{"name":"cargoresult"}}],[5,"find_project_manifest","","Iteratively search for `file` in `pwd` and its parents, returning\nthe path to the file.",null,{"inputs":[{"name":"path"},{"name":"str"}],"output":{"name":"cargoresult"}}],[5,"find_root_manifest_for_wd","","Find the root Cargo.toml",null,{"inputs":[{"name":"option"},{"name":"path"}],"output":{"name":"cargoresult"}}],[5,"find_project_manifest_exact","","Return the path to the `file` in `pwd`, if it exists.",null,{"inputs":[{"name":"path"},{"name":"str"}],"output":{"name":"cargoresult"}}],[0,"paths","cargo::util","",null,null],[5,"join_paths","cargo::util::paths","",null,null],[5,"dylib_path_envvar","","",null,{"inputs":[],"output":{"name":"str"}}],[5,"dylib_path","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"normalize_path","","",null,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[5,"without_prefix","","",null,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[5,"read","","",null,{"inputs":[{"name":"path"}],"output":{"name":"cargoresult"}}],[5,"read_bytes","","",null,{"inputs":[{"name":"path"}],"output":{"name":"cargoresult"}}],[5,"write","","",null,null],[5,"append","","",null,null],[5,"path2bytes","","",null,{"inputs":[{"name":"path"}],"output":{"name":"cargoresult"}}],[5,"bytes2path","","",null,null],[0,"process_builder","cargo::util","",null,null],[3,"ProcessBuilder","cargo::util::process_builder","",null,null],[5,"process","","",null,{"inputs":[{"name":"t"}],"output":{"name":"processbuilder"}}],[11,"fmt","","",97,null],[11,"eq","","",97,null],[11,"ne","","",97,null],[11,"clone","","",97,null],[11,"fmt","","",97,null],[11,"arg","","",97,null],[11,"args","","",97,null],[11,"cwd","","",97,null],[11,"env","","",97,null],[11,"env_remove","","",97,null],[11,"get_args","","",97,null],[11,"get_cwd","","",97,null],[11,"get_env","","",97,null],[11,"get_envs","","",97,null],[11,"exec","","",97,null],[11,"exec_with_output","","",97,null],[11,"build_command","","",97,null],[0,"profile","cargo::util","",null,null],[3,"Profiler","cargo::util::profile","",null,null],[5,"start","","",null,{"inputs":[{"name":"t"}],"output":{"name":"profiler"}}],[11,"drop","","",98,null],[0,"to_semver","cargo::util","",null,null],[8,"ToSemver","cargo::util::to_semver","",null,null],[10,"to_semver","","",99,null],[11,"to_semver","semver::version","",100,null],[0,"to_url","cargo::util","",null,null],[8,"ToUrl","cargo::util::to_url","",null,null],[10,"to_url","","",101,null],[0,"toml","cargo::util","",null,null],[3,"Layout","cargo::util::toml","Representation of the projects file layout.",null,null],[12,"root","","",102,null],[3,"DetailedTomlDependency","","",null,null],[3,"TomlManifest","","",null,null],[3,"TomlProfiles","","",null,null],[3,"TomlProfile","","",null,null],[3,"TomlProject","","",null,null],[3,"TomlVersion","","",null,null],[4,"TomlDependency","","",null,null],[13,"Simple","","",103,null],[13,"Detailed","","",103,null],[5,"to_manifest","","",null,null],[5,"parse","","",null,{"inputs":[{"name":"str"},{"name":"path"},{"name":"config"}],"output":{"name":"cargoresult"}}],[11,"clone","","",102,null],[11,"from_project_path","","Returns a new `Layout` for a given root path.\nThe `root_path` represents the directory that contains the `Cargo.toml` file.",102,{"inputs":[{"name":"path"}],"output":{"name":"layout"}}],[11,"decode","","",103,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"default","","",104,{"inputs":[],"output":{"name":"detailedtomldependency"}}],[11,"clone","","",104,null],[11,"decode","","",104,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"decode","","",105,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"default","","",106,{"inputs":[],"output":{"name":"tomlprofiles"}}],[11,"clone","","",106,null],[11,"decode","","",106,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"default","","",107,{"inputs":[],"output":{"name":"tomlprofile"}}],[11,"clone","","",107,null],[11,"decode","","",107,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"decode","","",108,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"decode","","",109,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"to_package_id","","",108,null],[11,"to_manifest","","",105,null],[0,"lev_distance","cargo::util","",null,null],[5,"lev_distance","cargo::util::lev_distance","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"usize"}}],[0,"job","cargo::util","Job management (mostly for windows)",null,null],[5,"setup","cargo::util::job","",null,{"inputs":[],"output":null}],[0,"network","cargo::util","",null,null],[5,"with_retry","cargo::util::network","Wrapper method for network call retry logic.",null,{"inputs":[{"name":"config"},{"name":"f"}],"output":{"name":"cargoresult"}}],[11,"fmt","cargo::util","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"clone","","",77,null],[11,"fmt","","",78,null],[11,"eq","","",78,null],[11,"ne","","",78,null],[11,"clone","","",78,null],[11,"from_str","","",77,{"inputs":[{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",77,null],[11,"matches","","",78,null],[11,"from_str","","",78,{"inputs":[{"name":"str"}],"output":{"name":"cargoresult"}}],[11,"fmt","","",78,null],[11,"fmt","","",110,null],[11,"clone","","",79,null],[11,"fmt","","",79,null],[11,"eq","","",79,null],[11,"combine","","",79,null],[11,"new","","Creates a new dependency queue with 0 packages.",110,{"inputs":[],"output":{"name":"dependencyqueue"}}],[11,"queue","","Adds a new package to this dependency queue.",110,null],[11,"dequeue","","Dequeues a package that is ready to be built.",110,null],[11,"is_empty","","Returns whether there are remaining packages to be built.",110,null],[11,"len","","Returns the number of remaining packages to be built.",110,null],[11,"finish","","Indicate that a package has been built.",110,null],[11,"new","","Run the compiler at `path` to learn varioues pieces of information about\nit.",76,{"inputs":[{"name":"p"}],"output":{"name":"cargoresult"}}],[11,"blank","","",76,{"inputs":[],"output":{"name":"rustc"}}],[11,"new","","",111,{"inputs":[],"output":{"name":"sha256"}}],[11,"update","","",111,null],[11,"finish","","",111,null],[11,"drop","","",111,null],[11,"init","","",112,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"discover","","",112,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"result"}}],[11,"init","","",113,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"discover","","",113,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"cargoresult"}}],[11,"new","","Creates a new empty lazy cell.",114,{"inputs":[{"name":"option"}],"output":{"name":"lazycell"}}],[11,"fill","","Put a value into this cell.",114,null],[11,"borrow","","Borrows the contents of this lazy cell for the duration of the cell\nitself.",114,null],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",114,null],[11,"file","","Returns the underlying file handle of this lock.",115,null],[11,"path","","Returns the underlying path that this lock points to.",115,null],[11,"parent","","Returns the parent path containing this file",115,null],[11,"remove_siblings","","Removes all sibling files to this locked file.",115,null],[11,"read","","",115,null],[11,"seek","","",115,null],[11,"write","","",115,null],[11,"flush","","",115,null],[11,"drop","","",115,null],[11,"fmt","","",116,null],[11,"clone","","",116,null],[11,"new","","Creates a new filesystem to be rooted at the given path.",116,{"inputs":[{"name":"pathbuf"}],"output":{"name":"filesystem"}}],[11,"join","","Like `Path::join`, creates a new filesystem rooted at this filesystem\njoined with the given path.",116,null],[11,"push","","Like `Path::push`, pushes a new path component onto this filesystem.",116,null],[11,"into_path_unlocked","","Consumes this filesystem and returns the underlying `PathBuf`.",116,null],[11,"create_dir","","Creates the directory pointed to by this filesystem.",116,null],[11,"display","","Returns an adaptor that can be used to print the path of this\nfilesystem.",116,null],[11,"open_rw","","Opens exclusive access to a file, returning the locked version of a\nfile.",116,null],[11,"open_ro","","Opens shared access to a file, returning the locked version of a file.",116,null]],"paths":[[4,"GitReference"],[8,"Source"],[3,"SourceId"],[3,"SourceMap"],[3,"SourcesMut"],[3,"Package"],[3,"PackageSet"],[3,"Metadata"],[4,"PackageIdError"],[3,"PackageId"],[3,"Box"],[4,"Platform"],[4,"Kind"],[3,"Dependency"],[3,"DependencyInner"],[3,"ManifestMetadata"],[3,"Profile"],[3,"Profiles"],[4,"LibKind"],[4,"TargetKind"],[3,"Manifest"],[3,"Target"],[4,"Method"],[3,"EncodableResolve"],[3,"EncodableDependency"],[3,"EncodablePackageId"],[3,"Resolve"],[3,"Deps"],[3,"DepsNotReplaced"],[8,"SummaryVec"],[3,"Summary"],[3,"Vec"],[3,"ShellConfig"],[4,"Verbosity"],[4,"ColorConfig"],[3,"MultiShell"],[3,"Shell"],[8,"Registry"],[3,"PackageRegistry"],[3,"PackageIdSpec"],[3,"CleanOptions"],[3,"CompileOptions"],[3,"Compilation"],[3,"Unit"],[3,"Context"],[3,"BuildOutput"],[3,"BuildConfig"],[3,"TargetConfig"],[3,"NewOptions"],[3,"DocOptions"],[3,"UpdateOptions"],[3,"TestOptions"],[3,"PackageOpts"],[3,"RegistryConfig"],[3,"OwnersOptions"],[3,"PublishOpts"],[3,"OutputMetadataOptions"],[4,"CompileFilter"],[4,"CompileMode"],[4,"Kind"],[4,"CommandType"],[4,"VersionControl"],[3,"ExportInfo"],[3,"ProcessEngine"],[3,"CommandPrototype"],[3,"Layout"],[3,"LayoutProxy"],[8,"ExecEngine"],[3,"PathSource"],[3,"GitRevision"],[3,"GitRemote"],[3,"GitDatabase"],[3,"GitCheckout"],[3,"GitSource"],[3,"RegistryConfig"],[3,"RegistrySource"],[3,"Rustc"],[4,"Cfg"],[4,"CfgExpr"],[4,"Freshness"],[3,"Value"],[4,"Location"],[4,"ConfigValue"],[4,"Definition"],[3,"Config"],[3,"ProcessError"],[3,"CargoTestError"],[3,"Human"],[3,"CliError"],[8,"CargoError"],[8,"ChainError"],[8,"NetworkError"],[4,"Result"],[4,"Option"],[3,"Error"],[3,"Error"],[3,"Graph"],[3,"ProcessBuilder"],[3,"Profiler"],[8,"ToSemver"],[3,"Version"],[8,"ToUrl"],[3,"Layout"],[4,"TomlDependency"],[3,"DetailedTomlDependency"],[3,"TomlManifest"],[3,"TomlProfiles"],[3,"TomlProfile"],[3,"TomlProject"],[3,"TomlVersion"],[3,"DependencyQueue"],[3,"Sha256"],[3,"GitRepo"],[3,"HgRepo"],[3,"LazyCell"],[3,"FileLock"],[3,"Filesystem"]]};
initSearch(searchIndex);
